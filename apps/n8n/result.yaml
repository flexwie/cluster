apiVersion: v1
data:
  config.json: |
    {
      "database": {
        "type": "sqlite"
      },
      "executions": {
        "pruneData": "true",
        "pruneDataMaxAge": 3760
      }
    }
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: n8n
    app.kubernetes.io/name: n8n
  name: n8n
  namespace: apps
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: n8n
    app.kubernetes.io/name: n8n
  name: n8n
  namespace: apps
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/instance: n8n
    app.kubernetes.io/name: n8n
    app.kubernetes.io/type: master
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app.kubernetes.io/instance: n8n
    app.kubernetes.io/name: n8n
  name: n8n
  namespace: apps
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: n8n
    app.kubernetes.io/name: n8n
  name: n8n
  namespace: apps
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: n8n
      app.kubernetes.io/name: n8n
      app.kubernetes.io/type: master
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        checksum/config: e8880b4fd0e5332baaabd15c7e7007bf951b926010c92605d95e09f8d4fcfd3f
      labels:
        app.kubernetes.io/instance: n8n
        app.kubernetes.io/name: n8n
        app.kubernetes.io/type: master
    spec:
      containers:
        - env:
            - name: WEBHOOK_TUNNEL_URL
              value: https:///abc.hippo-cod.ts.net
            - name: N8N_PORT
              value: "5678"
            - name: N8N_CONFIG_FILES
              value: /n8n-config/config.json
          image: n8nio/n8n:1.49.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          name: n8n
          ports:
            - containerPort: 5678
              name: http
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources: {}
          securityContext: {}
          volumeMounts:
            - mountPath: /home/node/.n8n
              name: data
            - mountPath: /n8n-config
              name: config-volume
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      volumes:
        - emptyDir: {}
          name: data
        - configMap:
            name: n8n
          name: config-volume
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app.kubernetes.io/instance: n8n
    app.kubernetes.io/name: n8n
  name: n8n
  namespace: apps
  annotations:
    tailscale.com/funnel: "true"
spec:
  defaultBackend:
    service:
      name: n8n
      port:
        name: http
  ingressClassName: tailscale
  tls:
    - hosts:
        - n8n
